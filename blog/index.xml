<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on jfblg.com</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on jfblg.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Apr 2019 15:28:40 +0200</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kvm and Qemu Basic Virtualization on Linux</title>
      <link>/blog/kvm-and-qemu-basic-virtualization-on-linux/</link>
      <pubDate>Sun, 14 Apr 2019 15:28:40 +0200</pubDate>
      
      <guid>/blog/kvm-and-qemu-basic-virtualization-on-linux/</guid>
      <description>KVM and Qemu basic usage commands Tools listed in the name of this article provide a lot of options for running a virtual machine. The challenge is to know them when you need it (or at least to know where to find them). Let&amp;rsquo;s list few example commands. I use(d) them on Debian 9.
KVM - Kernel Virual Machine is a modele of Linux Kernel which allows application to access a virtualization functions of the Linux kernel via /dev/kvm.</description>
    </item>
    
    <item>
      <title>Learning Go</title>
      <link>/blog/learning-go/</link>
      <pubDate>Sat, 21 Apr 2018 12:56:24 +0200</pubDate>
      
      <guid>/blog/learning-go/</guid>
      <description>Learning Go - Notes Notes which I took during my learning. It&amp;rsquo;d be great if they would also help you.
Go is statically written (type of every variable must be defined), pass by value (whenever you pass an argument into a function, Go creates a copy of each argument, and these copies are used inside of the function) programming language.
Go workspace and basics  MUST READ DOCUMENT  Syntax Variable declaration  if you define a variable within the if statement(condition) it is valid only there.</description>
    </item>
    
    <item>
      <title></title>
      <link>/blog/linux-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/linux-filesystem/</guid>
      <description>Draft Linux filesystem notes Most filesystem implementations define 7 types of files: - Regular files - Directories - Character device files - Block device file - Local domain socket - Named pipes (FIFOs) - Symbolic links
Use file command to determine a file type.
mount - maps a directory withing the existing file tree, called the mount point, to the root of newly attached filesystem umount - to detach a filesystem.</description>
    </item>
    
  </channel>
</rss>